rclone_rc_host: "127.0.0.1"
rclone_rc_port: "5572"
rclone_rc_user: "{{ username }}"
rclone_rc_pass: "" # Should be passed from a vault

rclone_sync_interval: 3600 # seconds == 1 hour
rclone_container_config_path: "{{ docker_container_dir }}/rclone/config"

rclone_b2_bucket_name: "ansiblevm-test-bucket"

# All local disk paths in must be relative to this file path
# Within the docker container, it will be called "/data"
rclone_data_path: "/data"

# This can be local -> cloud or vice versa
# "sync" will also delete
# "copy" will write new files but never delete
#   - good for avoiding archive-tier cloud api costs
rclone_data_pairs:
  - service_name: "google-photos-dl"
    src: "gphotos:album/Honey"
    dest: "photos/honey"
    operation: sync

  - service_name: "photos-archive"
    src: "photos/honey"
    dest: "b2-crypt:photos/honey"
    operation: copy

# Control which remotes are enabled per host
rclone_enabled_remotes:
  gphotos: true
  blaze-b2: true
  b2-crypt: true
  # requires user interaction, disable for test runs
  proton-drive: false

# The secrets should be passed in the play from a vault
rclone_rc_remotes:
  - name: gphotos
    type: google photos
    parameters:
      read_only: "true"
      token: "{{ rclone_gphotos_token }}"

  - name: blaze-b2
    type: b2
    parameters:
      account: "{{ rclone_b2_account }}"
      key: "{{ rclone_b2_key }}"

  - name: b2-crypt
    type: crypt
    parameters:
      remote: "blaze-b2:{{ rclone_b2_bucket_name }}"
      password: "{{ rclone_b2_crypt_pass }}"
      show_mapping: "true"

  - name: proton-drive
    type: protondrive
    parameters:
      username: "{{ proton_username }}"
      password: "{{ proton_pass }}"
      # 2FA requested in the role due to timeout
